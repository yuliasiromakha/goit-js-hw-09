{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIMQ,SAASC,cAAc,SAkD/BC,iBAAiB,UAhDtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAMC,EAAQC,OAAOH,EAAMI,OAAOC,SAAShB,MAAMiB,OAC3CC,EAAOJ,OAAOH,EAAMI,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOH,EAAMI,OAAOC,SAASG,OAAOF,OAEnD,GAAKJ,GAAUK,QAAmBE,IAAXD,EAAvB,CAKA,IAAME,EAASV,EAAMI,OAAOO,iBAAiB,SACvCC,EAAYZ,EAAMI,OAAON,cAAc,UAC7CY,EAAOG,SAAQ,SAAAC,G,OAASA,EAAMC,UAAW,C,IACzCH,EAAUG,UAAW,EAIrB,IADA,IAAMC,EAAW,GACRC,EAAI,EAAGA,GAAKT,EAAQS,IAAK,CAChC,IAEMC,EAAU/B,EAFC8B,EACIf,GAASe,EAAI,GAAKV,GAEvCS,EAASG,KAAKD,E,CAGhBlB,EAAMI,OAAOgB,QAEb3B,QAAQ4B,WAAWL,GAAUM,MAAK,WAChC,IAAMC,EAAWC,aAAY,WACvBC,EAAAxC,GAASyC,SACbC,cAAcJ,GACdb,EAAOG,SAAQ,SAAAC,G,OAASA,EAAMC,UAAW,C,IACzCH,EAAUG,UAAW,E,GACpB,I,IAGLC,EAASH,SAAQ,SAAAK,GACfA,EACGI,MAAK,SAAAM,G,IAAGxC,EAAQwC,EAARxC,SAAUC,EAAKuC,EAALvC,MACjBoC,EAAAxC,GAASyC,OAAOG,QAAQ,uBAAwCC,OAAf1C,EAAS,QAAY0C,OAANzC,EAAM,M,IAEvE0C,OAAM,SAAAH,G,IAAGxC,EAAQwC,EAARxC,SAAUC,EAAKuC,EAALvC,MAClBoC,EAAAxC,GAASyC,OAAOM,QAAQ,sBAAqCF,OAAf1C,EAAS,QAAY0C,OAANzC,EAAM,M,YAnCvEoC,EAAAxC,GAASyC,OAAOO,QAAQ,4B","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n  \n  const delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n\n  if (!delay || !step || amount === undefined) {\n    Notiflix.Notify.warning('Please fill in all fields');\n    return;\n  }\n\n  const inputs = event.target.querySelectorAll('input');\n  const submitBtn = event.target.querySelector('button');\n  inputs.forEach(input => input.disabled = true);\n  submitBtn.disabled = true;\n\n  // Create promises\n  const promises = [];\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const currentDelay = delay + (i - 1) * step;\n    const promise = createPromise(position, currentDelay);\n    promises.push(promise);\n  }\n\n  event.target.reset();\n\n  Promise.allSettled(promises).then(() => {\n    const interval = setInterval(() => {\n      if (Notiflix.Notify) return;\n      clearInterval(interval);\n      inputs.forEach(input => input.disabled = false);\n      submitBtn.disabled = false;\n    }, 100);\n  });\n\n  promises.forEach(promise => {\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  });\n}\n\nform.addEventListener('submit', onSubmitForm);"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","target","elements","value","step","amount","undefined","inputs","querySelectorAll","submitBtn","forEach","input","disabled","promises","i","promise","push","reset","allSettled","then","interval","setInterval","$parcel$interopDefault","Notify","clearInterval","param","success","concat","catch","failure","warning"],"version":3,"file":"03-promises.18e939f6.js.map"}