{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,C,SAAEN,E,MAAUC,IAEpBM,EAAO,C,SAAEP,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIAQ,SAASC,cAAc,SA2C/BC,iBAAiB,UAzCtB,SAAsBC,GACpBA,EAAMC,iBAEN,MAAMC,EAAQC,OAAOH,EAAMI,OAAOC,SAAShB,MAAMiB,OAC3CC,EAAOJ,OAAOH,EAAMI,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOH,EAAMI,OAAOC,SAASG,OAAOF,OAEnD,QAAeG,IAAXD,EAEF,YADAE,EAAAzB,GAAS0B,OAAOC,QAAQ,6BAI1B,MAAMC,EAAW,GACjB,IAAK,IAAIC,EAAI,EAAGA,GAAKN,EAAQM,IAAK,CAChC,MAEMC,EAAU5B,EAFC2B,EACIZ,GAASY,EAAI,GAAKP,GAEvCM,EAASG,KAAKD,E,CAGhBf,EAAMI,OAAOa,QAEbxB,QAAQyB,WAAWL,GAAUM,MAAK,KAChC,MAAMC,EAAWC,aAAY,KACvBX,EAAAzB,GAAS0B,SACbW,cAAcF,GACdpB,EAAMI,OAAOmB,iBAAiB,SAASC,SAAQC,GAASA,EAAMC,UAAW,IAAM,GAC9E,IAAI,IAGTb,EAASW,SAAQT,IACfA,EACGI,MAAK,EAAC/B,SAAEA,EAAQC,MAAEA,MACjBqB,EAAAzB,GAAS0B,OAAOgB,QAAQ,uBAAqBvC,QAAiBC,MAAU,IAEzEuC,OAAM,EAACxC,SAAEA,EAAQC,MAAEA,MAClBqB,EAAAzB,GAAS0B,OAAOkB,QAAQ,sBAAoBzC,QAAeC,MAAU,GACrE,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  const delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n\n  if (amount === undefined) {\n    Notiflix.Notify.warning('Please fill in all fields');\n    return;\n  }\n\n  const promises = [];\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const currentDelay = delay + (i - 1) * step;\n    const promise = createPromise(position, currentDelay);\n    promises.push(promise);\n  }\n\n  event.target.reset();\n\n  Promise.allSettled(promises).then(() => {\n    const interval = setInterval(() => {\n      if (Notiflix.Notify) return;\n      clearInterval(interval);\n      event.target.querySelectorAll('input').forEach(input => input.disabled = false);\n    }, 100);\n  });\n\n  promises.forEach(promise => {\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  });\n}\n\nform.addEventListener('submit', onSubmitForm);"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","target","elements","value","step","amount","undefined","$parcel$interopDefault","Notify","warning","promises","i","promise","push","reset","allSettled","then","interval","setInterval","clearInterval","querySelectorAll","forEach","input","disabled","success","catch","failure"],"version":3,"file":"03-promises.eafbbcb7.js.map"}