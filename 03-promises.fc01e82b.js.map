{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACLN,EACFI,EAAQ,CAAEN,WAAUC,UAEpBM,EAAO,CAAEP,WAAUC,S,GAEpBA,E,IAIMQ,SAASC,cAAc,SA2C/BC,iBAAiB,UAzCtB,SAAsBC,GACpBA,EAAMC,iBAEN,IAAMC,EAAQC,OAAOH,EAAMI,OAAOC,SAAShB,MAAMiB,OAC3CC,EAAOJ,OAAOH,EAAMI,OAAOC,SAASE,KAAKD,OACzCE,EAASL,OAAOH,EAAMI,OAAOC,SAASG,OAAOF,OAEnD,GAAKJ,EAAL,CAMA,IADA,IAAMO,EAAW,GACRC,EAAI,EAAGA,GAAKF,EAAQE,IAAK,CAChC,IAEMC,EAAUxB,EAFCuB,EACIR,GAASQ,EAAI,GAAKH,GAEvCE,EAASG,KAAKD,E,CAGhBX,EAAMI,OAAOS,QAEbpB,QAAQqB,WAAWL,GAAUM,MAAK,WAChC,IAAMC,EAAWC,aAAY,WACvBC,EAAAjC,GAASkC,SACbC,cAAcJ,GACdhB,EAAMI,OAAOiB,iBAAiB,SAASC,SAAQ,SAAAC,G,OAASA,EAAMC,UAAW,C,OACxE,I,IAGLf,EAASa,SAAQ,SAAAX,GACfA,EACGI,MAAK,SAAAU,G,IAAGrC,EAAQqC,EAARrC,SAAUC,EAAKoC,EAALpC,MACjB6B,EAAAjC,GAASkC,OAAOO,QAAQ,uBAAwCC,OAAfvC,EAAS,QAAYuC,OAANtC,EAAM,M,IAEvEuC,OAAM,SAAAH,G,IAAGrC,EAAQqC,EAARrC,SAAUC,EAAKoC,EAALpC,MAClB6B,EAAAjC,GAASkC,OAAOU,QAAQ,sBAAqCF,OAAfvC,EAAS,QAAYuC,OAANtC,EAAM,M,YA5BvE6B,EAAAjC,GAASkC,OAAOW,QAAQ,4B","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nconst form = document.querySelector('.form');\n\nfunction onSubmitForm(event) {\n  event.preventDefault();\n\n  const delay = Number(event.target.elements.delay.value);\n  const step = Number(event.target.elements.step.value);\n  const amount = Number(event.target.elements.amount.value);\n\n  if (!delay || !step === undefined) {\n    Notiflix.Notify.warning('Please fill in all fields');\n    return;\n  }\n\n  const promises = [];\n  for (let i = 1; i <= amount; i++) {\n    const position = i;\n    const currentDelay = delay + (i - 1) * step;\n    const promise = createPromise(position, currentDelay);\n    promises.push(promise);\n  }\n\n  event.target.reset();\n\n  Promise.allSettled(promises).then(() => {\n    const interval = setInterval(() => {\n      if (Notiflix.Notify) return;\n      clearInterval(interval);\n      event.target.querySelectorAll('input').forEach(input => input.disabled = false);\n    }, 100);\n  });\n\n  promises.forEach(promise => {\n    promise\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  });\n}\n\nform.addEventListener('submit', onSubmitForm);"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","document","querySelector","addEventListener","event","preventDefault","delay1","Number","target","elements","value","step","amount","promises","i","promise","push","reset","allSettled","then","interval","setInterval","$parcel$interopDefault","Notify","clearInterval","querySelectorAll","forEach","input","disabled","param","success","concat","catch","failure","warning"],"version":3,"file":"03-promises.fc01e82b.js.map"}